{"version":3,"sources":["webpack:///webpack/bootstrap 87eefff1b2d18928adc8","webpack:///./plugin.js","webpack:///./ViewModel.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,OAAO,UAAU;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,SAAS,OAAO;AAChB,gCAAgC,GAAG;AACnC,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,KAAK;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA,0CAA0C,KAAK,kCAAkC,KAAK;AACtF;AACA;AACA,GAAG;;AAEH;AACA;AACA,8CAA8C,yBAAyB;AACvE,iEAAiE,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE,mGAAmG,GAAG;AACtG;AACA;AACA,wCAAwC,GAAG,UAAU,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,KAAK;AAC5C,UAAU,KAAK;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,GAAG;AAC/C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAKA;;;;;;;;ACjJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,aAAa,8BAA8B;AAC3C,sCAAsC,KAAK;AAC3C,6DAA6D,KAAK;AAClE;AACA;;AAEA;AACA,8BAA8B,kBAAkB;AAChD,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,aAAa,IAAI,UAAU,IAAI,MAAM;AACpG,WAAW;AACX;AACA;AACA;AACA,6DAA6D,WAAW,IAAI,UAAU,IAAI,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AAAA;AAAA","file":"peekaboo.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 87eefff1b2d18928adc8","/**\n * @author Rafael Trevisan <rafael@trevis.ca>\n * @license\n * Copyright (c) 2018 Rafael Trevisan\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following players:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* global apex $v */\n\nimport ViewModel from './ViewModel';\n\nconst ko = require('knockout');\n\nconst viewModel = new ViewModel();\nconst { players } = viewModel;\n\nconst init = () => {\n  apex.debug.info('Hello from APEX Peekaboo :: https://github.com/rafael-trevisan/apex-plugin-peekaboo');\n  ko.applyBindings(viewModel);\n};\n\nconst render = (pluginType, id, visibility) => {\n  const { item } = visibility;\n  const affectedElement = $(`#${id}`);\n  const triggeringElement = item && $(`#${item}`);\n  const triggeringElementType = item && (() => {\n    switch (true) {\n      case $(triggeringElement).hasClass('radio_group'):\n        return 'radio';\n      case $(triggeringElement).hasClass('checkbox_group'):\n        return 'checkbox';\n      case $(triggeringElement)[0].hasAttribute('data-checked-value'):\n        return 'simple-checkbox';\n      default:\n        console.warn(`${item} is neither a \"radio\", a \"checkbox\" or a \"simple-checkbox\".`);\n        return null;\n    }\n  })();\n  const triggeringElementSelector = (() => {\n    if (item) {\n      return `input[type=\"radio\"][name=\"${item}\"],input[type=\"checkbox\"][name=\"${item}\"]`;\n    }\n    return 'input[type=\"radio\"],input[type=\"checkbox\"]';\n  })();\n\n  switch (true) {\n    case pluginType === 'REGION':\n      $(affectedElement).addClass(`peekaboo-${pluginType.toLowerCase()}`);\n      $(affectedElement).attr('data-bind', `visible: peekaboo('${id}')`);\n      break;\n    case pluginType === 'TEXTFIELD' ||\n         pluginType === 'RADIOGROUP' ||\n         pluginType === 'CHECKBOX' ||\n         pluginType === 'SIMPLE_CHECKBOX':\n      $(affectedElement).addClass(`peekaboo-${pluginType.toLowerCase()}`);\n      $(affectedElement).parents('.t-Form-fieldContainer').attr('data-bind', `visible: peekaboo('${id}')`);\n      break;\n    default:\n      console.warn(`Affected Element \"${id}\" type (${pluginType}) is not supported by Peekaboo at this time.`);\n  }\n\n  $(triggeringElementSelector).each((i, e) => {\n    const name = $(e).attr('name');\n    const type = (() => {\n      switch ($(e).attr('type')) {\n        case 'radio':\n          return 'radio';\n        case 'checkbox':\n          return $(e)[0].hasAttribute('data-checked-value') ? 'simple-checkbox' : 'checkbox';\n        default:\n          console.warn(`${item} is neither a \"radio\", a \"checkbox\" or a \"simple-checkbox\".`);\n      }\n      return null;\n    })();\n    const propagateChange = () => {\n      if (viewModel[name]) {\n        let val;\n        /**\n         * if viewModel[item] === observableArray (wich is true for checkboxes),\n         * then it needs to be checked against an array object . Othersise it\n         * needs to be checked against a plain value\n         */\n        if (typeof viewModel[name]() === 'object') {\n          val = $v(name) ? $v(name).split(':') : [];\n          if (!viewModel[name]().every(r => val.includes(r))) {\n            viewModel[name](val);\n          }\n        } else {\n          val = type === 'simple-checkbox' ? $(`#${name}`).prop('checked') : $v(name);\n          if (viewModel[name]() !== val) {\n            viewModel[name](val);\n          }\n        }\n      }\n    };\n\n    $(e).attr('data-bind', `checked: ${name}`);\n    $(`#${name}`).off('.peekaboo').on('change.peekaboo', propagateChange);\n\n    switch (true) {\n      case type === 'radio' || type === 'simple-checkbox':\n        viewModel[name] = ko.observable();\n        break;\n      case type === 'checkbox':\n        viewModel[name] = ko.observableArray();\n        break;\n      default:\n        console.warn(`Triggering Element \"${id}\" is not supported by Peekaboo at this time.`);\n    }\n  });\n\n  viewModel.players.push({\n    id,\n    triggeringElement: {\n      id: item,\n      type: triggeringElementType,\n    },\n    visibility,\n    visible: ko.observable(),\n  });\n\n  // just in case => $._data($(window)[0], 'events');\n  $(window).off('.peekaboo').on('theme42ready.peekaboo', init);\n};\n\nexport {\n  render,\n  players,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugin.js\n// module id = 1\n// module chunks = 0","const ko = require('knockout');\n\nexport default class ViewModel {\n  constructor() {\n    this.players = ko.observableArray();\n    this.peekaboo = id => ko.pureComputed(() => {\n      const player = this.players().find(e => e.id === id);\n      const {\n        condition, item, value, list, expr, actions,\n      } = player.visibility;\n      const { type: triggeringElementType } = player.triggeringElement;\n      const triggeringElement = $(`#${item}`);\n      const triggeringElementSelector = item ? `input[name=${item}]` : 'input[type=radio],input[type=checkbox]';\n      const listener = ko.observableArray();\n      let visible = false;\n\n      $(triggeringElementSelector).each((i, e) => {\n        listener.push(this[`${$(e).attr('name')}`]());\n      });\n\n      if (triggeringElementType === 'checkbox'\n          && ['==', '!=', '>', '>=', '<', '<='].indexOf(condition) > -1) {\n        console.warn('Heads Up! Checkboxes items should have their values checked for \"NULL\", \"NOT NULL\", \"IN\" and \"NOT IN\" only.');\n      }\n\n      switch (true) {\n        case ['==', '!=', '>', '>=', '<', '<='].indexOf(condition) > -1:\n          if (triggeringElementType === 'radio') {\n            visible = this[item]() !== 'undefined' && eval(`\"${this[item]()}\" ${condition} \"${value}\"`);\n          } else if (triggeringElementType === 'simple-checkbox') {\n            const inputValue = this[item]() === true ?\n              $(triggeringElement).attr('data-checked-value') :\n              $(triggeringElement).attr('data-unchecked-value');\n            visible = inputValue !== 'undefined' && eval(`\"${inputValue}\" ${condition} \"${value}\"`);\n          }\n          break;\n        case condition === 'IS_NULL':\n          visible = !this[item]();\n          break;\n        case condition === 'IS_NOT_NULL':\n          visible = !!this[item]();\n          break;\n        case condition === 'IS_IN_LIST':\n          if (triggeringElementType === 'radio') {\n            visible = this[item]() && list.split(',').indexOf(this[item]()) > -1;\n          } else if (triggeringElementType === 'checkbox') {\n            visible = this[item]() && list.split(',').some(r => this[item]().includes(r));\n          }\n          break;\n        case condition === 'IS_NOT_IN_LIST':\n          if (triggeringElementType === 'radio') {\n            visible = this[item]() && list.split(',').indexOf(this[item]()) < 0;\n          } else if (triggeringElementType === 'checkbox') {\n            visible = this[item]() && !list.split(',').some(r => this[item]().includes(r));\n          }\n          break;\n        case condition === 'JAVASCRIPT_EXPRESSION':\n          visible = eval(expr);\n          break;\n        default:\n          console.warn('An unexepcted condition has been found. Take a look into your players.');\n          console.warn(player);\n      }\n\n      if (visible && !player.visible()) {\n        eval(actions.onShow.code);\n      } else if (!visible && player.visible()) {\n        eval(actions.onHide.code);\n      }\n\n      player.visible(visible);\n\n      $(triggeringElementSelector).each((i, e) => {\n        $(e).triggerHandler('click');\n      });\n\n      return player.visible();\n    }, this);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ViewModel.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}